*qrpsqlpq.txt*                                          quickrun psql settings

==============================================================================
CONTENTS                                                   *qrpsqlpq-contents*

    Usage  ................................. |qrpsqlpq-usage|
    Configuration  ......................... |qrpsqlpq-configuration|
      General options  ..................... |qrpsqlpq-general-options|
      Examples ............................. |qrpsqlpq-examples|

==============================================================================
USAGE                                                         *qrpsqlpq-usage*

This plugin tries to be unobtrusive, it adds a 'sql/qrpsqlpq' quickrun type,
and only takes effect when running quickrun with that type.

You can set key mapping to start it, see |qrpsqlpq-examples| for example.
(No default mappings were defined).


Connect to database ~

  Currently only "-d dbname" is configurable.

  Set |b:qrpsqlpq_db_name| or |g:qrpsqlpq_db_name|, or qrpsqlpq will try using
  rails.vim detect your development setting.

==============================================================================
CONFIGURATION                                         *qrpsqlpq-configuration*

------------------------------------------------------------------------------
General options                                     *qrpsqlpq-general-options*

                                                           *g:loaded_qrpsqlpq*
g:loaded_qrpsqlpq   (default: none) ~

  Set to 1 to prevent this plugin from being loaded.
                                                          *b:qrpsqlpq_db_name*
                                                          *g:qrpsqlpq_db_name*
b:qrpsqlpq_db_name  (default: none) ~

  Connect database name (the -d, --dbname option of psql).
  |b:var| has higher priority than |g:var|.
  If none is set, qrpsqlpq may try detect your Rails development setting with
  rails.vim plugin.

                                            *g:qrpsqlpq_expanded_format_lines*
g:qrpsqlpq_expanded_format_lines ~
                    (default: none) ~

  If lines of output result exceeds this number, stop try formatting it for
  performance.

  If not set, "10000" is used.
  If set to "-1", never format.

------------------------------------------------------------------------------
Configuration examples:                                    *qrpsqlpq-examples*

Key mappings, only on "sql" filetype, with:

    {lhs}          {function} ~
    ----------     ------------------------------------------- ~
    <Leader>rj     output psql result to split window
    <Leader>rl     output psql result to vertical split window
    <Leader>rr     output with last used split method
>
    function! s:init_qrpsqlpq()
      nmap <buffer> <Leader>r [qrpsqlpq]
      nnoremap <silent> <buffer> [qrpsqlpq]j :call qrpsqlpq#run('split')<CR>
      nnoremap <silent> <buffer> [qrpsqlpq]l :call qrpsqlpq#run('vsplit')<CR>
      nnoremap <silent> <buffer> [qrpsqlpq]r :call qrpsqlpq#run()<CR>
    endfunction
    autocmd FileType sql call s:init_qrpsqlpq()
<
==============================================================================
vim:tw=78:fo=tcroq2mM:et:sts=2:sw=2:ft=help:norl:
